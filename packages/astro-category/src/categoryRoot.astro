---
import { getCollection } from 'astro:content';
import CategoryItem from './categoryItem.astro';

interface Props {
  collection?: string;
  root?: string;
  title?: string | boolean;
  categoryTitle?: string | boolean;
  contentTitle?: string | boolean;
  linkStyle?: string;
  linkClassName?: string;
}

const {
  collection,
  root = 'category',
  linkStyle,
  linkClassName,
  title,
  categoryTitle,
  contentTitle
} = Astro.props;

const allPosts = await getCollection(collection);

const category = [
  ...new Set(
    allPosts
      .filter((post: any) => post.id.split('/').length > 1)
      .map((post: any) => post.slug.split('/')[0])
  )
];
const content = [
  ...new Set(
    allPosts
      .filter((post: any) => post.id.split('/').length === 1)
      .map((post: any) => post)
  )
];
---

{title !== false && <h1>{title || collection}</h1>}

{contentTitle !== false && <h2>{contentTitle || 'SubContent'}</h2>}
{
  content.map((cate: any) => (
    <CategoryItem
      url={`/${collection}/${cate.slug}/`}
      title={cate.data.title}
      style={linkStyle}
      className={linkClassName}
    />
  ))
}
{categoryTitle !== false && <h2>{categoryTitle || 'SubCategory'}</h2>}
{
  category.map((cate: any) => (
    <CategoryItem
      title={cate}
      url={`/${root}/${cate}`}
      style={linkStyle}
      className={linkClassName}
    />
  ))
}
