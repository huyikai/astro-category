---
import { getCollection } from 'astro:content';
import CategoryItem from './categoryItem.astro';

interface Props {
  collection?: string;
  root?: string;
  linkStyle?: string;
  linkClassName?: string;
  title?: string | boolean;
}

const {
  collection,
  root = 'category',
  linkStyle,
  linkClassName,
  title = true
} = Astro.props;

const allPosts = await getCollection(collection);

const category = [
  ...new Set(
    allPosts
      .filter((post: any) => post.id.split('/').length > 1)
      .map((post: any) => post.slug.split('/')[0])
  )
];
const content = [
  ...new Set(
    allPosts
      .filter((post: any) => post.id.split('/').length === 1)
      .map((post: any) => post)
  )
];
---

<div>
  {
    title && (
      <slot name="title">
        {typeof title === 'string' ? (
          <h2>{title}</h2>
        ) : (
          title && <h2>{collection}</h2>
        )}
      </slot>
    )
  }

  <slot name="content-title">
    <h3>content</h3>
  </slot>

  {
    content.map((cate: any) => (
      <CategoryItem
        url={`/${collection}/${cate.slug}/`}
        title={cate.data.title}
        style={linkStyle}
        className={linkClassName}
      />
    ))
  }

  <slot name="category-title">
    <h3>category</h3>
  </slot>
  {
    category.map((cate: any) => (
      <CategoryItem
        title={cate}
        url={`/${root}/${cate}`}
        style={linkStyle}
        className={linkClassName}
      />
    ))
  }
</div>
